#!/usr/bin/env bash

generate_payload() {
    local model="$1"
    local prompt="$2"
    local option='{"temperature": 0.01}'
    local payload=$(jq -n --arg model "$model" --arg prompt "$prompt" --argjson option "$option" '{model: $model, stream: false, messages: [{role: "user", content: $prompt}], options: $option}')
    echo "$payload" | jq -c
}

MODEL="codellama"
ENDPOINT="http://envup:13337/api/chat"
GIT_DIFF=$(git diff HEAD~1)
PROMPT="Write a concise git commit message divided into purpose, outcome, context and approach. Based on the changes in the last commit: ${GIT_DIFF}"
PAYLOAD=$(generate_payload "$MODEL" "$PROMPT")

if git rev-parse --is-inside-work-tree &>/dev/null; then
    echo "Sending payload:"
    echo "$PAYLOAD"
    RESPONSE=$(curl -s -d "$PAYLOAD" "$ENDPOINT")
    echo "Received response:"
    echo "$RESPONSE"

    if [ -z "$RESPONSE" ] || [ "$RESPONSE" = "null" ]; then
        echo "Error: Response is null." >&2
        exit 1
    fi

    if ! echo "$RESPONSE" | jq -e . >/dev/null; then
        echo "Response from server:"
        echo "$RESPONSE"
        echo "Error: Invalid JSON response." >&2
        exit 1
    fi

    COMMIT_MESSAGE=$(echo "$RESPONSE" | jq -r '.message.content')
    if [ -z "$COMMIT_MESSAGE" ] || [ "$COMMIT_MESSAGE" = "null" ]; then
        echo "Error: Response does not contain a valid commit message." >&2
        exit 1
    fi

    git commit -m "$COMMIT_MESSAGE"
else
    echo "Error: Not in a Git repository." >&2
fi



