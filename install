#!/usr/bin/env bash

DOT_FILES=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
PACKAGES=$DOT_FILES/packages
CONFIG_PATH=$HOME/.config
NVIM_CONFIG=$CONFIG_PATH/nvim
NVIM_PLUGINS=$NVIM_CONFIG/lua/plugins
EPOCH=$(date +%s%N)
ARCHIVE=$DOT_FILES/archive/$EPOCH

# Remove brew if existing
function remove_brew {
	if [ -d /home/linuxbrew/ ]; then
		test -d $HOME/.linuxbrew && eval "$($HOME/.linuxbrew/bin/brew shellenv)"
		test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
		/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)"
		sudo rm -rf /home/linuxbrew
	fi
}

# Bash
if [ -f $HOME/.bashrc ]; then
	rm $HOME/.bashrc
fi
if [ -f $HOME/.bash_profile ]; then
	rm $HOME/.bash_profile
fi
if [ -f $HOME/.bash_logout ]; then
	rm $HOME/.bash_logout
fi
if [ -f $HOME/.bash_aliases ]; then
	rm $HOME/.bash_aliases
fi
ln -sf $DOT_FILES/bash/.bash_aliases $HOME/.bash_aliases
ln -sf $DOT_FILES/bash/.bashrc $HOME/.bashrc
ln -sf $DOT_FILES/bash/.bash_profile $HOME/.bash_profile
ln -sf $DOT_FILES/bash/.bash_logout $HOME/.bash_logout
if grep -Fxq "$PACKAGES" $HOME/.bashrc; then
	echo "Packages path exist in .bashrc"
else
	echo "Add packages path to .bashrc"
	echo "export PACKAGES=${PACKAGES};" >>$HOME/.bashrc
fi

source $DOT_FILES/bash/.bashrc $HOME/.bashrc

##############################
# JetBrains Mono Fonts	     #
##############################
mkdir -p $DOT_FILES/fonts
curl -s -o $DOT_FILES/fonts/JetBrainsMono.zip https://www.1001fonts.com/download/jetbrains-mono.zip
if [ -d $DOT_FILES/fonts/ ]; then
	mkdir -p $HOME/.local/share/fonts/JetBrainsMono
	unzip -d $HOME/.local/share/fonts/JetBrainsMono $DOT_FILES/fonts/JetBrainsMono.zip
fi

##############################
# Symbols Nerd Fonts	     #
##############################
curl -s -o $DOT_FILES/fonts/NerdFontsSymbolsOnly.zip https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/NerdFontsSymbolsOnly.zip
if [ -d $DOT_FILES/fonts/ ]; then
	mkdir -p $HOME/.local/share/fonts/NerdFontsSymbolsOnly
	unzip -d $HOME/.local/share/fonts/NerdFontsSymbolsOnly $DOT_FILES/fonts/NerdFontsSymbolsOnly.zip
fi


# Install requirements
if [ -x "$(command -v apt)" ]; then
	remove_brew
	sudo apt update -y && sudo apt upgrade -y
	xargs sudo apt-get install <$PACKAGES/apt_packages.txt
	sudo apt autoclean && sudo apt clean
fi

if [ -x "$(command -v snap)" ]; then
	remove_brew
	while IFS="" read -r p || [ -n "$p" ]; do
		sudo snap install "$p"
		sudo snap refresh "$p"
	done <$PACKAGES/snap_packages.txt
	while IFS="" read -r p || [ -n "$p" ]; do
		sudo snap install --classic "$p"
		sudo snap refresh --classic "$p"
	done <$PACKAGES/snap_classic_packages.txt
fi

# Install Rust
curl -s --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

# tmux
if [ -f $HOME/.tmux.conf ]; then
	rm $HOME/.tmux.conf
fi
ln -sf $DOT_FILES/tmux/tmux.conf $HOME/.tmux.conf

# Kitty
if [ -d $CONFIG_PATH/kitty ]; then
	rm -rf $CONFIG_PATH/kitty
fi
ln -sf $DOT_FILES/kitty $CONFIG_PATH

# NeoVim
if [ -d $CONFIG_PATH/nvim ]; then
	rm -rf $CONFIG_PATH/nvim
fi

if [ -d $DOT_FILES/nvim ]; then
	mkdir -p $ARCHIVE
	mv -f $DOT_FILES/nvim $ARCHIVE/nvim
fi

# Remove pre-existing nvim conf
rm -rf $HOME/.local/share/nvim
rm -rf $HOME/.local/state/nvim
rm -rf $HOME/.cache/nvim

# Scripts
mkdir -p $HOME/.local/bin
ln -sf $DOT_FILES/scripts/tk $HOME/.local/bin/tk
chmod +x $DOT_FILES/scripts/tk
ln -sf $DOT_FILES/scripts/update_apt_list $HOME/.local/bin/update_apt_list
chmod +x $DOT_FILES/scripts/update_apt_list
