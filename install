#!/usr/bin/env bash

DOT_FILES=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
CONFIG_PATH=$HOME/.config
NVIM_CONFIG=$CONFIG_PATH/nvim
NVIM_PLUGINS=$NVIM_CONFIG/lua/plugins
EPOCH=$(date +%s%N)
ARCHIVE=$DOT_FILES/archive/$EPOCH
NERD_FONT_VERSION="v3.1.1"
ALACRITTY_VERSION="0.13.1"

# Remove brew if existing
function remove_brew {
	if [ -d /home/linuxbrew/ ]; then
		test -d $HOME/.linuxbrew && eval "$($HOME/.linuxbrew/bin/brew shellenv)"
		test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
		/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)"
		sudo rm -rf /home/linuxbrew
	fi
}

##############################
# All Nerd Fonts	     #
##############################
function dl_all_nerd_fonts {
	mkdir -p $DOT_FILES/fonts
	curl -s -L -o $DOT_FILES/fonts/NerdFonts_$NERD_FONT_VERSION.zip -A "Mozilla/5.0" https://github.com/ryanoasis/nerd-fonts/archive/refs/tags/$NERD_FONT_VERSION.zip
	if [ -d $DOT_FILES/fonts/ ]; then
		mkdir -p $HOME/.local/share/fonts
		unzip -d $HOME/.local/share/fonts $DOT_FILES/fonts/NerdFonts_$NERD_FONT_VERSION.zip
	fi
}

# Rust
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
source "$HOME/.cargo/env"

if [[ $SHELL == *"bash"* ]]; then
	# Bash
	if [ -f $HOME/.bashrc ]; then
		rm $HOME/.bashrc
	fi
	if [ -f $HOME/.bash_profile ]; then
		rm $HOME/.bash_profile
	fi
	if [ -f $HOME/.bash_logout ]; then
		rm $HOME/.bash_logout
	fi
	if [ -f $HOME/.bash_aliases ]; then
		rm $HOME/.bash_aliases
	fi
	if [ -f $HOME/.secrets ]; then
		rm $HOME/.secrets
	fi
	ln -sf $DOT_FILES/bash/.bash_aliases $HOME/.bash_aliases
	ln -sf $DOT_FILES/bash/.bashrc $HOME/.bashrc
	ln -sf $DOT_FILES/bash/.bash_profile $HOME/.bash_profile
	ln -sf $DOT_FILES/bash/.bash_logout $HOME/.bash_logout
	ln -sf $DOT_FILES/bash/.bash_aliases $HOME/.bash_aliases
	if [ -f $DOT_FILES/bash/.secrets ]; then
		ln -sf $DOT_FILES/bash/.secrets $HOME/.secrets
	fi
	source $DOT_FILES/bash/.bashrc $HOME/.bashrc
fi

# Alacritty
curl -s -L -o $DOT_FILES/alacritty.$ALACRITTY_VERSION.tar.gz https://github.com/alacritty/alacritty/archive/refs/tags/v$ALACRITTY_VERSION.tar.gz
tar -xzf $DOT_FILES/alacritty.$ALACRITTY_VERSION.tar.gz
cd $DOT_FILES/alacritty-$ALACRITTY_VERSION && cargo build --release && cd $DOT_FILES
ln -sf $DOT_FILES/alacritty-$ALACRITTY_VERSION/target/release/alacritty $HOME/.local/bin/alacritty

# Download fonts
dl_all_nerd_fonts

# Alacritty
if [ -d $CONFIG_PATH/alacritty ]; then
	rm -rf $CONFIG_PATH/alacritty
fi
ln -sf $DOT_FILES/alacritty $CONFIG_PATH

# Remove brew if apt or snap is available
if [ -x "$(command -v apt)" ]; then
	remove_brew
	curl -fsSL https://apt.fury.io/wez/gpg.key | sudo gpg --yes --dearmor -o /usr/share/keyrings/wezterm-fury.gpg
	echo 'deb [signed-by=/usr/share/keyrings/wezterm-fury.gpg] https://apt.fury.io/wez/ * *' | sudo tee /etc/apt/sources.list.d/wezterm.list
	sudo apt update -y
	sudo apt upgrade -y
	sudo apt install wezterm cmake pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev python3
	sudo apt autoremove -y
fi

if [ -x "$(command -v snap)" ]; then
	remove_brew
fi

# NeoVim
curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz
sudo rm -rf /opt/nvim
sudo tar -C /opt -xzf nvim-linux64.tar.gz

if [ -d $CONFIG_PATH/nvim ]; then
	rm -rf $CONFIG_PATH/nvim
fi

if [ -d $DOT_FILES/nvim ]; then
	mkdir -p $ARCHIVE
	mv -f $DOT_FILES/nvim $ARCHIVE/nvim
fi

# Remove pre-existing nvim conf
rm -rf $HOME/.local/share/nvim
rm -rf $HOME/.local/state/nvim
rm -rf $HOME/.cache/nvim

# Lazygit
LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
curl -Lso lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
tar xf lazygit.tar.gz lazygit
sudo install lazygit /usr/local/bin
rm -rf lazygit*

# Lazyvim
curl -Lso lazyvim.zip https://github.com/LazyVim/starter/archive/refs/heads/main.zip && unzip lazyvim.zip -d lazyvim
ln -sf $DOT_FILES/lazyvim/starter-main $CONFIG_PATH/nvim

# Scripts
mkdir -p $HOME/.local/bin

# Looki looki if reboot is needy needy
if [ -f /var/run/reboot-required ]; then
	echo 'reboot required'
	sudo reboot
fi
