#!/usr/bin/env bash

DOT_FILES=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
CONFIG_PATH=$HOME/.config

##############################
# JetBrains Mono Fonts		 #
##############################
mkdir -p $HOME/.local/share/fonts/JetBrainsMono
unzip -d $HOME/.local/share/fonts/JetBrainsMono $DOT_FILES/fonts/JetBrainsMono.zip

# Bash
if [ -f $HOME/.bashrc ]; then
	rm $HOME/.bashrc
fi
if [ -f $HOME/.bash_profile ]; then
	rm $HOME/.bash_profile
fi
if [ -f $HOME/.bash_logout ]; then
	rm $HOME/.bash_logout
fi

ln -sf $DOT_FILES/bash/.bashrc $HOME/.bashrc
ln -sf $DOT_FILES/bash/.bash_profile $HOME/.bash_profile
ln -sf $DOT_FILES/bash/.bash_logout $HOME/.bash_logout

# tmux
if [ -f $HOME/.tmux.conf ]; then
	rm $HOME/.tmux.conf
fi
ln -sf $DOT_FILES/tmux/tmux.conf $HOME/.tmux.conf

# Kitty
if [ -d $CONFIG_PATH/kitty ]; then
	rm -rf $CONFIG_PATH/kitty
fi
ln -sf $DOT_FILES/kitty $CONFIG_PATH

# Scripts
mkdir -p $HOME/.local/bin
ln -sf $DOT_FILES/scripts/t $HOME/.local/bin/t

# Brew
# sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"

if [ -d /home/linuxbrew/ ]; then
	test -d ~/.linuxbrew && eval "$(~/.linuxbrew/bin/brew shellenv)"
	test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
	test -r ~/.bash_profile && echo "eval \"\$($(brew --prefix)/bin/brew shellenv)\"" >> ~/.bash_profile
fi

brew vendor-install ruby
brew install gcc

# Install multiple php
brew tap shivammathur/php
brew install shivammathur/php/php@8.2
brew install shivammathur/php/php@8.1
brew install shivammathur/php/php@8.0
brew install shivammathur/php/php@7.4
brew install shivammathur/php/php@7.3
brew install shivammathur/php/php@5.6

sudo ln -sf /home/linuxbrew/.linuxbrew/opt/php@5.6/bin/php /usr/local/bin/php56
sudo ln -sf /home/linuxbrew/.linuxbrew/opt/php@7.3/bin/php /usr/local/bin/php73
sudo ln -sf /home/linuxbrew/.linuxbrew/opt/php@7.4/bin/php /usr/local/bin/php74
sudo ln -sf /home/linuxbrew/.linuxbrew/opt/php@8.0/bin/php /usr/local/bin/php80
sudo ln -sf /home/linuxbrew/.linuxbrew/opt/php@8.1/bin/php /usr/local/bin/php81
sudo ln -sf /home/linuxbrew/.linuxbrew/opt/php@8.2/bin/php /usr/local/bin/php82
sudo ln -sf /home/linuxbrew/.linuxbrew/opt/php@8.2/bin/php /usr/local/bin/php82

# Current php
sudo ln -sf /home/linuxbrew/.linuxbrew/opt/php@8.2/bin/php /usr/local/bin/php

# Composer
COMPOSER=/usr/local/bin/composer
if [ ! -f "$COMPOSER" ]; then
	php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
	php -r "if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
	php composer-setup.php
	php -r "unlink('composer-setup.php');"
	sudo mv composer.phar /usr/local/bin/composer
fi

# yt-dlp
mkdir -p $HOME/.config/yt-dlp
ln -sf $DOT_FILES/yt-dlp/config $HOME/.config/yt-dlp/config
ln -sf $DOT_FILES/yt-dlp/laracasts.config $HOME/.config/yt-dlp/laracasts.config


# NeoVim
if [ -d $CONFIG_PATH/nvim ]; then
	rm -rf $CONFIG_PATH/nvim
fi
ln -sf $DOT_FILES/nvim $CONFIG_PATH

# Polybar
if [ -d $CONFIG_PATH/polybar ]; then
	rm -rf $CONFIG_PATH/polybar
fi
ln -sf $DOT_FILES/polybar $CONFIG_PATH

# Install pipx with brew
brew install pipx
brew cleanup --prune 30
# End Brew

pipx ensurepath completions

# Install poetry
pipx install --force poetry
